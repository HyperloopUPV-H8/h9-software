import { Measurement } from "../models";
import { PayloadAction } from "@reduxjs/toolkit";
import { PodDataAdapter, PacketUpdate } from "../adapters";
export type Measurements = {
    measurements: Record<string, Measurement>;
    packetIdToBoard: Record<number, string>;
};
export declare const measurementsSlice: import("@reduxjs/toolkit").Slice<Measurements, {
    initMeasurements: (_: Measurements, action: PayloadAction<PodDataAdapter>) => {
        measurements: Record<string, Measurement>;
        packetIdToBoard: Record<number, string>;
    };
    updateMeasurements: (state: Measurements, action: PayloadAction<Record<string, PacketUpdate>>) => void;
}, "measurements">;
export declare function getMeasurement(measurements: Measurements, id: string): Measurement | undefined;
export declare function getMeasurementFallback(measurements: Measurements, id: string): Measurement;
//# sourceMappingURL=measurementsSlice.d.ts.map