import { BooleanMeasurement, Measurements, NumericMeasurement } from "..";
export type BmslMeasurements = {
    av_current: NumericMeasurement;
    low_cell1: NumericMeasurement;
    low_cell2: NumericMeasurement;
    low_cell3: NumericMeasurement;
    low_cell4: NumericMeasurement;
    low_cell5: NumericMeasurement;
    low_cell6: NumericMeasurement;
    low_SOC1: NumericMeasurement;
    low_is_balancing1: NumericMeasurement;
    low_maximum_cell: NumericMeasurement;
    low_minimum_cell: NumericMeasurement;
    low_battery_temperature_1: NumericMeasurement;
    low_battery_temperature_2: NumericMeasurement;
    total_voltage_low: NumericMeasurement;
    input_charging_current: NumericMeasurement;
    output_charging_current: NumericMeasurement;
    input_charging_voltage: NumericMeasurement;
    output_charging_voltage: NumericMeasurement;
    pwm_frequency: NumericMeasurement;
    conditions_ready: BooleanMeasurement;
    conditions_want_to_charge: BooleanMeasurement;
    conditions_charging: BooleanMeasurement;
    conditions_fault: BooleanMeasurement;
};
export declare function selectBmslMeasurements(measurements: Measurements): BmslMeasurements;
//# sourceMappingURL=BMSL.d.ts.map