import { BooleanMeasurement, EnumMeasurement, Measurements, NumericMeasurement } from "..";
export type ObccuMeasurements = {
    generalState: EnumMeasurement;
    maximumCell1: NumericMeasurement;
    maximumCell2: NumericMeasurement;
    maximumCell3: NumericMeasurement;
    maximumCell4: NumericMeasurement;
    maximumCell5: NumericMeasurement;
    maximumCell6: NumericMeasurement;
    maximumCell7: NumericMeasurement;
    maximumCell8: NumericMeasurement;
    maximumCell9: NumericMeasurement;
    maximumCell10: NumericMeasurement;
    minimumCell1: NumericMeasurement;
    minimumCell2: NumericMeasurement;
    minimumCell3: NumericMeasurement;
    minimumCell4: NumericMeasurement;
    minimumCell5: NumericMeasurement;
    minimumCell6: NumericMeasurement;
    minimumCell7: NumericMeasurement;
    minimumCell8: NumericMeasurement;
    minimumCell9: NumericMeasurement;
    minimumCell10: NumericMeasurement;
    SOC1: EnumMeasurement;
    SOC2: EnumMeasurement;
    SOC3: EnumMeasurement;
    SOC4: EnumMeasurement;
    SOC5: EnumMeasurement;
    SOC6: EnumMeasurement;
    SOC7: EnumMeasurement;
    SOC8: EnumMeasurement;
    SOC9: EnumMeasurement;
    SOC10: EnumMeasurement;
    isBalancing1: BooleanMeasurement;
    isBalancing2: BooleanMeasurement;
    isBalancing3: BooleanMeasurement;
    isBalancing4: BooleanMeasurement;
    isBalancing5: BooleanMeasurement;
    isBalancing6: BooleanMeasurement;
    isBalancing7: BooleanMeasurement;
    isBalancing8: BooleanMeasurement;
    isBalancing9: BooleanMeasurement;
    isBalancing10: BooleanMeasurement;
    dclvTemperature: NumericMeasurement;
    battery_temperature_1: NumericMeasurement;
    battery_temperature_2: NumericMeasurement;
    battery_temperature_3: NumericMeasurement;
    battery_temperature_4: NumericMeasurement;
    battery_temperature_5: NumericMeasurement;
    battery_temperature_6: NumericMeasurement;
    battery_temperature_7: NumericMeasurement;
    battery_temperature_8: NumericMeasurement;
    battery_temperature_9: NumericMeasurement;
    battery_temperature_10: NumericMeasurement;
    "2BatteryTemperature1": NumericMeasurement;
    "2BatteryTemperature2": NumericMeasurement;
    "2BatteryTemperature3": NumericMeasurement;
    "2BatteryTemperature4": NumericMeasurement;
    "2BatteryTemperature5": NumericMeasurement;
    "2BatteryTemperature6": NumericMeasurement;
    "2BatteryTemperature7": NumericMeasurement;
    "2BatteryTemperature8": NumericMeasurement;
    "2BatteryTemperature9": NumericMeasurement;
    "2BatteryTemperature10": NumericMeasurement;
    imd: BooleanMeasurement;
    totalVoltage1: NumericMeasurement;
    totalVoltage2: NumericMeasurement;
    totalVoltage3: NumericMeasurement;
    totalVoltage4: NumericMeasurement;
    totalVoltage5: NumericMeasurement;
    totalVoltage6: NumericMeasurement;
    totalVoltage7: NumericMeasurement;
    totalVoltage8: NumericMeasurement;
    totalVoltage9: NumericMeasurement;
    totalVoltage10: NumericMeasurement;
    totalVoltageHigh: NumericMeasurement;
    drift: BooleanMeasurement;
};
export declare function selectObccuMeasurements(measurements: Measurements): ObccuMeasurements;
//# sourceMappingURL=OBCCU.d.ts.map