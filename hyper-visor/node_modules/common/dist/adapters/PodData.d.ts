import { PodData, Board, Packet, BooleanMeasurement, EnumMeasurement, NumericMeasurement } from "../models";
export type PodDataAdapter = {
    boards: {
        [name: string]: BoardAdapter;
    };
};
type BoardAdapter = Omit<Board, "measurementToPacket" | "packets"> & {
    packets: {
        [id: number]: PacketAdapter;
    };
};
export type PacketAdapter = Omit<Packet, "measurements"> & {
    measurements: {
        [name: string]: MeasurementAdapter;
    };
};
export type MeasurementAdapter = NumericMeasurementAdapter | BooleanMeasurementAdapter | EnumMeasurementAdapter;
export type NumericMeasurementAdapter = Omit<NumericMeasurement, "value">;
export type BooleanMeasurementAdapter = Omit<BooleanMeasurement, "value">;
export type EnumMeasurementAdapter = Omit<EnumMeasurement, "value">;
export declare function createPodDataFromAdapter(adapter: PodDataAdapter): PodData;
export declare function isNumericAdapter(adapter: MeasurementAdapter): adapter is NumericMeasurementAdapter;
export declare function getNumericMeasurement(id: string, adapter: NumericMeasurementAdapter): NumericMeasurement;
export declare function getEnumMeasurement(id: string, adapter: EnumMeasurementAdapter): EnumMeasurement;
export declare function getBooleanMeasurement(id: string, adapter: BooleanMeasurementAdapter): BooleanMeasurement;
export {};
//# sourceMappingURL=PodData.d.ts.map